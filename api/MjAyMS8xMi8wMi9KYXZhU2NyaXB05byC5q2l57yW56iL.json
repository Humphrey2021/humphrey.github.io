{"title":"JavaScript异步编程","date":"2021-12-02T12:12:38.000Z","date_formatted":{"ll":"Dec 2, 2021","L":"12/02/2021","MM-DD":"12-02"},"link":"2021/12/02/JavaScript异步编程","tags":["javascript","异步编程"],"categories":["前端"],"updated":"2021-12-07T07:55:23.084Z","content":"<h2 id=\"js异步编程的介绍\">JS异步编程的介绍<a title=\"#js异步编程的介绍\" href=\"#js异步编程的介绍\"></a></h2>\n<p>首先说说为什么会有<code>JS</code>异步编程<br>\n众所周知，<code>JS</code>是单线程模式工作的，因为<code>JS</code>是运行在浏览器端的脚本语言，目的是为了实现页面的交互，那么因为页面交互主要是DOM操作，从而决定了它必须使用单线程模式工作，否则就会出现特别复杂的线程同步问题。<br>\n这种模式优点是更安全、更简单，缺点就是如果在代码执行中遇到一个特别耗时的操作，那么后面的代码就必须等待这个操作结束以后才可以执行。<br>\n所以，为了解决像这样的情况，<code>JS</code>将任务的执行模式分成了两种，分别是<strong>同步模式(Synchronous)<strong>和</strong>异步模式(Asynchronous)</strong></p>\n<p>同步模式和异步模式</p>\n<p>事件循环和消息队列</p>\n<p>异步编程的几种方式</p>\n<p>Promise异步方案、宏任务/微任务队列</p>\n<p>Generator异步方案、Async/Await语法糖</p>\n","next":{"title":"函数式编程","link":"2021/11/30/函数式编程"},"plink":"https://rdhuang.gitee.io/2021/12/02/JavaScript异步编程/","toc":[{"id":"js异步编程的介绍","title":"JS异步编程的介绍","index":"1"}],"copyright":{"author":"Humphrey","link":"<a href=\"https://rdhuang.gitee.io/2021/12/02/JavaScript异步编程/\" title=\"JavaScript异步编程\">https://rdhuang.gitee.io/2021/12/02/JavaScript异步编程/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}