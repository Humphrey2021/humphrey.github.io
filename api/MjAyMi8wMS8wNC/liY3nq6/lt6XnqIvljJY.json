{"title":"前端工程化","date":"2022-01-04T06:30:29.000Z","date_formatted":{"ll":"Jan 4, 2022","L":"01/04/2022","MM-DD":"01-04"},"link":"2022/01/04/前端工程化","tags":["前端工程化"],"categories":["前端"],"updated":"2022-01-13T02:53:57.662Z","content":"<h3 id=\"什么是前端工程化\">什么是前端工程化<a title=\"#什么是前端工程化\" href=\"#什么是前端工程化\"></a></h3>\n<blockquote>\n<p>一切以提高效率、降低成本、质量保证为目的的手段都属于【工程化】</p>\n</blockquote>\n<p>一切技术都是为了解决问题在存在的。所以前端工程化的出现也是为了解决前端项目越来越大的问题而出现的。</p>\n<h3 id=\"前端工程化主要解决的问题\">前端工程化主要解决的问题<a title=\"#前端工程化主要解决的问题\" href=\"#前端工程化主要解决的问题\"></a></h3>\n<ol>\n<li>传统语言或语法的弊端</li>\n<li>无法使用模块化/组件化</li>\n<li>重复的机械式工作</li>\n<li>代码风格统一、质量保证</li>\n<li>依赖后端服务接口支持</li>\n<li>整体依赖后端项目</li>\n</ol>\n<h3 id=\"工程化是如何表现的\">工程化是如何表现的<a title=\"#工程化是如何表现的\" href=\"#工程化是如何表现的\"></a></h3>\n<p>以一个项目的开发流程为例<br>\n创建 —&gt; 编码 —&gt; 预览/测试 —&gt; 提交远程仓库 —&gt; 部署上线</p>\n<ul>\n<li>在项目创建阶段，我们可以使用脚手架工具进行项目初期的构建</li>\n<li>编码阶段，我们可以制定一个规范，格式化代码，校验代码风格等</li>\n<li>预览/测试阶段，可以使用 webServer 进行热更行，mock去模拟接口数据等</li>\n<li>提交远程仓库，可以使用 GIT Hooks，lint-staged 在提交之前做代码质量，编码风格的检查</li>\n<li>部署上线，CI/CD 自动发布，避免人为操作失误等</li>\n</ul>\n<h3 id=\"工程化并不等于某个工具\">工程化并不等于某个工具<a title=\"#工程化并不等于某个工具\" href=\"#工程化并不等于某个工具\"></a></h3>\n<p>由于 webpack 功能过于强大，会有人认为工程化就是指webpack，其实这是错误的。<br>\n工程化是对项目整体的一种规划和架构，而像webpack等工具只是去实现这种规划和架构的一种手段。</p>\n","prev":{"title":"自动化构建","link":"2022/01/05/自动化构建"},"next":{"title":"JavaScript性能优化","link":"2021/12/31/JavaScript性能优化"},"plink":"https://rdhuang.gitee.io/2022/01/04/前端工程化/","toc":[{"id":"什么是前端工程化","title":"什么是前端工程化","index":"1"},{"id":"前端工程化主要解决的问题","title":"前端工程化主要解决的问题","index":"2"},{"id":"工程化是如何表现的","title":"工程化是如何表现的","index":"3"},{"id":"工程化并不等于某个工具","title":"工程化并不等于某个工具","index":"4"}],"copyright":{"author":"Humphrey","link":"<a href=\"https://rdhuang.gitee.io/2022/01/04/前端工程化/\" title=\"前端工程化\">https://rdhuang.gitee.io/2022/01/04/前端工程化/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}