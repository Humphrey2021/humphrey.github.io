{"title":"ECMAScript","date":"2021-12-27T06:00:53.000Z","date_formatted":{"ll":"Dec 27, 2021","L":"12/27/2021","MM-DD":"12-27"},"link":"2021/12/27/ECMAScript","tags":["ECMAScript","javascript"],"categories":["前端"],"updated":"2022-01-05T02:10:25.683Z","content":"<p>javascript 其实是 ECMAScript 的拓展语言</p>\n<p>ECMAScript 只提供了最基本的语法</p>\n<p>在浏览器中<br>\njs = ECMAScript + 浏览器提供的API，如：BOM、DOM<br>\n在 node 中<br>\njs = ECMAScript + node中提供的API，如：fs、net、etc.</p>\n<p>人们平常说的 ES6 其实是泛指 包含ES2015及后续的所有新特性</p>\n<ol>\n<li>var let const<br>\nlet 块级作用域，没有变量提升阶段，只在当前代码块生效<br>\nconst 在声明的时候就需要定义，一旦定义就不可更改（只适用普通数据类型，对于引用类型只要不改变指针，就可以对内部的数据进行更改）</li>\n<li>数组的解构</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"keyword\">const</span> [first, two, ...args] = arr</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(first) <span class=\"comment\">// 1</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(two) <span class=\"comment\">// 2</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(args) <span class=\"comment\">// [3, 4, 5]</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>对象的解构</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj = &#123; <span class=\"attr\">a</span>: <span class=\"number\">1</span>, <span class=\"attr\">b</span>: <span class=\"number\">2</span>, <span class=\"attr\">c</span>: <span class=\"number\">3</span> &#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; a, c &#125; = obj</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(a, c) <span class=\"comment\">// 1 3</span></span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>模板字符串</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> s1 = <span class=\"string\">&#x27;❤️&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> s2 = <span class=\"string\">`I <span class=\"subst\">$&#123; s1 &#125;</span> U`</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(s2) <span class=\"comment\">// I ❤️ U</span></span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>带标签的模板字符串</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"string\">&#x27;zhangshan&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> gender = <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myTagFunc</span> (<span class=\"params\">strings</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> sex = gender ? <span class=\"string\">&#x27;man&#x27;</span> : <span class=\"string\">&#x27;woman&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> strings[<span class=\"number\">0</span>] + name + strings[<span class=\"number\">1</span>] + sex + strings[<span class=\"number\">2</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> result = myTagFunc<span class=\"string\">`hey, <span class=\"subst\">$&#123;name&#125;</span> is a <span class=\"subst\">$&#123;gender&#125;</span>`</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(result)</span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>字符串的拓展方法</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> str = <span class=\"string\">&#x27;Good Good Study, Day Day Up.&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.startsWith(<span class=\"string\">&#x27;Good&#x27;</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.endsWith(<span class=\"string\">&#x27;.&#x27;</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.includes(<span class=\"string\">&#x27;Study&#x27;</span>)) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<ol start=\"7\">\n<li>参数默认值</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span> (<span class=\"params\">enable = <span class=\"literal\">true</span></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(enable)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">foo() <span class=\"comment\">// true</span></span><br><span class=\"line\">foo(<span class=\"literal\">false</span>) <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<ol start=\"8\">\n<li>剩余参数</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span> (<span class=\"params\">a, b, ...args</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(args)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">foo() <span class=\"comment\">// []</span></span><br><span class=\"line\">foo(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">7</span>) <span class=\"comment\">// [3, 4, 5, 6, 7]</span></span><br></pre></td></tr></table></figure>\n<ol start=\"9\">\n<li>展开数组</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(...arr) <span class=\"comment\">// 1 2 3</span></span><br></pre></td></tr></table></figure>\n<ol start=\"10\">\n<li>箭头函数</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span> (<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a + b</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// =======箭头函数改造=======&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> foo = <span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a + b</span><br></pre></td></tr></table></figure>\n<ol start=\"11\">\n<li>箭头函数与this<br>\n箭头函数不会改变this的指向</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> person = &#123;</span><br><span class=\"line\">        name: <span class=\"string\">&#x27;TOM&#x27;</span>,</span><br><span class=\"line\">        sayHi: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">`hi, my name is <span class=\"subst\">$&#123;<span class=\"built_in\">this</span>.name&#125;</span>`</span>)</span><br><span class=\"line\">            <span class=\"comment\">// hi, my name is TOM</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sayHi: <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">`hi, my name is <span class=\"subst\">$&#123;<span class=\"built_in\">this</span>.name&#125;</span>`</span>)</span><br><span class=\"line\">            <span class=\"comment\">// hi, my name is undefined</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sayHiAsync: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name) <span class=\"comment\">// undefined</span></span><br><span class=\"line\">            &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">            <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>.name) <span class=\"comment\">// TOM</span></span><br><span class=\"line\">            &#125;, <span class=\"number\">1000</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"12\">\n<li>对象字面量的增强</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> bar = <span class=\"string\">&#x27;123&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> obj = &#123;</span><br><span class=\"line\">    foo: <span class=\"number\">345</span>,</span><br><span class=\"line\">    <span class=\"comment\">// bar: bar,</span></span><br><span class=\"line\">    bar,</span><br><span class=\"line\">    <span class=\"comment\">// method: function () &#123;</span></span><br><span class=\"line\">    <span class=\"comment\">//     console.log(&#x27;xxx&#x27;)</span></span><br><span class=\"line\">    <span class=\"comment\">// &#125;</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">method</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;xxx&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    [<span class=\"built_in\">Math</span>.random()]: <span class=\"number\">12345</span> <span class=\"comment\">// 计算属性名</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"13\">\n<li>Object.assign</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj1 = &#123; <span class=\"attr\">a</span>: <span class=\"number\">1</span>, <span class=\"attr\">b</span>: <span class=\"number\">2</span>, <span class=\"attr\">c</span>: <span class=\"number\">3</span> &#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj2 = &#123; <span class=\"attr\">a</span>: <span class=\"number\">2</span>, <span class=\"attr\">d</span>: <span class=\"number\">4</span> &#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj3 = &#123; <span class=\"attr\">c</span>: <span class=\"number\">4</span>, <span class=\"attr\">e</span>: <span class=\"number\">5</span> &#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.assign(obj1, obj2, obj3)) <span class=\"comment\">// &#123;a: 2, b: 2, c: 4, d: 4, e: 5&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fn</span> (<span class=\"params\">obj</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> funcObj = <span class=\"built_in\">Object</span>.assign(&#123;&#125;, obj)</span><br><span class=\"line\">    funcObj.name = <span class=\"string\">&#x27;func obj&#x27;</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(funcObj)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj = &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;global obj&#x27;</span> &#125;</span><br><span class=\"line\">fn(obj) <span class=\"comment\">// &#123; name: func obj &#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj) <span class=\"comment\">// &#123; name: global obj &#125;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"14\">\n<li><a href=\"http://Object.is\">Object.is</a></li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Object</span>.is(<span class=\"literal\">NaN</span>, <span class=\"literal\">NaN</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"literal\">NaN</span> === <span class=\"literal\">NaN</span> <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<ol start=\"15\">\n<li>Proxy 对比 defineProperty</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> person = &#123;</span><br><span class=\"line\">    name: <span class=\"string\">&#x27;zhangshan&#x27;</span>,</span><br><span class=\"line\">    age: <span class=\"number\">18</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> personProxy = <span class=\"keyword\">new</span> <span class=\"built_in\">Proxy</span>(person, &#123;</span><br><span class=\"line\">    get (target, property) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> property <span class=\"keyword\">in</span> target ? target[property] : <span class=\"string\">&#x27;default&#x27;</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    set (target, property, value) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (property === <span class=\"string\">&#x27;age&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!<span class=\"built_in\">Number</span>.isInteger(value)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(<span class=\"string\">`<span class=\"subst\">$&#123;value&#125;</span> is not an int`</span>)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        target[property] = value</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">personProxy.age = <span class=\"string\">&#x27;100&#x27;</span> <span class=\"comment\">// TypeError: 100 is not an int</span></span><br><span class=\"line\">personProxy.age = <span class=\"number\">100</span></span><br><span class=\"line\">personProxy.gender = <span class=\"literal\">true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(personProxy.name) <span class=\"comment\">// zhangshan</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(personProxy.xxx) <span class=\"comment\">// default</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>Object.defineProperty 只能监听属性的读写</li>\n<li>Proxy 能够监视到更多的对象操作</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Proxy</span>(person, &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 方法     触发方式</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">get</span>(<span class=\"params\"></span>)</span> &#123;&#125;, <span class=\"comment\">// 读取某个属性</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">set</span>(<span class=\"params\"></span>)</span> &#123;&#125;, <span class=\"comment\">// 写入某个属性</span></span><br><span class=\"line\">    has <span class=\"comment\">// in 操作符</span></span><br><span class=\"line\">    deleteProperty <span class=\"comment\">// delete 操作符</span></span><br><span class=\"line\">    getPrototypeOf <span class=\"comment\">// Object.getPrototypeOf()</span></span><br><span class=\"line\">    setPrototypeOf <span class=\"comment\">// Object.setPrototypeOf()</span></span><br><span class=\"line\">    isExtensible <span class=\"comment\">// Object.isExtensible()</span></span><br><span class=\"line\">    preventExtensions <span class=\"comment\">// Object.preventExtensions()</span></span><br><span class=\"line\">    getOwnPropertyDescriptor <span class=\"comment\">// Object.getOwnPropertyDescriptor()</span></span><br><span class=\"line\">    defineProperty <span class=\"comment\">// Object.defineProperty()</span></span><br><span class=\"line\">    ownKeys <span class=\"comment\">// Object.getOwnPropertyNames()、Object.getOwnPropertySymbols()</span></span><br><span class=\"line\">    apply <span class=\"comment\">// 调用一个函数</span></span><br><span class=\"line\">    construct <span class=\"comment\">// 用 new 调用一个函数</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>可以监视数组</li>\n<li>Proxy 是以非侵入的方式监管了对象的读写</li>\n</ul>\n<ol start=\"16\">\n<li>Reflect<br>\n属于一个静态类 不可以使用 new 关键字<br>\n统一提供了一套用于操作对象的 API</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Reflect.get</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> obj = &#123;</span><br><span class=\"line\">    foo: <span class=\"string\">&#x27;123&#x27;</span>,</span><br><span class=\"line\">    bar: <span class=\"string\">&#x27;456&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> proxy = <span class=\"keyword\">new</span> <span class=\"built_in\">Proxy</span>(obj, &#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">get</span>(<span class=\"params\">target, property</span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">Reflect</span>.get(target, property)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<ol start=\"17\">\n<li>\n<p>Promise<br>\n一种更优的异步编程解决方案，解决了传统异步编程中回调函数嵌套过深的问题</p>\n</li>\n<li>\n<p>class 类</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"title\">constructor</span> (<span class=\"params\">name</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    say () &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">`hi, my name is <span class=\"subst\">$&#123;<span class=\"built_in\">this</span>.name&#125;</span>`</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> p = <span class=\"keyword\">new</span> Person(<span class=\"string\">&#x27;tom&#x27;</span>)</span><br><span class=\"line\">p.say()</span><br></pre></td></tr></table></figure>\n<ol start=\"19\">\n<li>静态方法 static</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"title\">constructor</span> (<span class=\"params\">name</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    say () &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">`hi, my name is <span class=\"subst\">$&#123;<span class=\"built_in\">this</span>.name&#125;</span>`</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> create (name) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Person(name)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> tom = Person.create(<span class=\"string\">&#x27;tom&#x27;</span>)</span><br><span class=\"line\">tom.say()</span><br></pre></td></tr></table></figure>\n<ol start=\"20\">\n<li>类的继承</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"title\">constructor</span> (<span class=\"params\">name</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    say () &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">`hi, my name is <span class=\"subst\">$&#123;<span class=\"built_in\">this</span>.name&#125;</span>`</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span> <span class=\"keyword\">extends</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"title\">constructor</span> (<span class=\"params\">name, number</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(name)</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.number = number</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    hello () &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>.say()</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">`my school number is <span class=\"subst\">$&#123;<span class=\"built_in\">this</span>.number&#125;</span>`</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> s = <span class=\"keyword\">new</span> Student(<span class=\"string\">&#x27;jack&#x27;</span>, <span class=\"string\">&#x27;100&#x27;</span>)</span><br><span class=\"line\">s.hello()</span><br></pre></td></tr></table></figure>\n<ol start=\"21\">\n<li>Set<br>\nSet内部成员不存在重复</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> s = <span class=\"keyword\">new</span> <span class=\"built_in\">Set</span>()</span><br><span class=\"line\">s.add(<span class=\"number\">1</span>).add(<span class=\"number\">2</span>).add(<span class=\"number\">3</span>).add(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(s) <span class=\"comment\">// Set &#123; 1 2 3 &#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(s.size) <span class=\"comment\">// 3</span></span><br><span class=\"line\">s.has(<span class=\"number\">3</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\">s.has(<span class=\"number\">5</span>) <span class=\"comment\">// false</span></span><br><span class=\"line\">s.delete(<span class=\"number\">1</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\">s.clear() <span class=\"comment\">// 清空</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"comment\">// const result = Array.from(new Set(arr))</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> result = [ ...new <span class=\"built_in\">Set</span>(arr) ]</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(result) <span class=\"comment\">// [1, 2, 3, 4]</span></span><br></pre></td></tr></table></figure>\n<ol start=\"22\">\n<li>Map<br>\n可以用任意类型作为键</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> m = <span class=\"keyword\">new</span> <span class=\"built_in\">Map</span>()</span><br><span class=\"line\"><span class=\"keyword\">const</span> tom = &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;tom&#x27;</span> &#125;</span><br><span class=\"line\">m.set(tom, <span class=\"number\">90</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(m) <span class=\"comment\">// Map &#123; &#123; name: &#x27;tom&#x27; &#125; =&gt; 90 &#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(m.get(tom)) <span class=\"comment\">// 90</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ol start=\"23\">\n<li>Symbol<br>\n新的数据类型<br>\n主要作用就是为对象添加独一无二的属性名</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Symbol</span>() === <span class=\"built_in\">Symbol</span>() <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"built_in\">Symbol</span>()</span><br><span class=\"line\"><span class=\"keyword\">const</span> person = &#123;</span><br><span class=\"line\">    [name]: <span class=\"string\">&#x27;zs&#x27;</span>,</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">say</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>[name])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> s1 = <span class=\"built_in\">Symbol</span>.for(<span class=\"string\">&#x27;foo&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> s2 = <span class=\"built_in\">Symbol</span>.for(<span class=\"string\">&#x27;foo&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(s1 === s2) <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">Symbol</span>.for(<span class=\"literal\">true</span>) === <span class=\"built_in\">Symbol</span>.for(<span class=\"string\">&#x27;true&#x27;</span>) <span class=\"comment\">// true 内部会自动转换成字符串</span></span><br><span class=\"line\"><span class=\"built_in\">Symbol</span>.iterator</span><br><span class=\"line\"><span class=\"built_in\">Symbol</span>.hasInstance</span><br></pre></td></tr></table></figure>\n<ol start=\"24\">\n<li>for…of 循环<br>\n原理是 Iterable</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> item <span class=\"keyword\">of</span> arr) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(item)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (item &gt; <span class=\"number\">100</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">break</span> <span class=\"comment\">// 可以终止循环</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"25\">\n<li>可迭代接口 Iterable</li>\n</ol>\n<blockquote>\n<p>对象方法不可以用 for…of 循环，但因为 for…of 循环的原理是使用 iterable ，所以我们可以给对象内部手写一个 iterable 让对象也同样可以使用 for…of 去进行遍历</p>\n</blockquote>\n<ol start=\"26\">\n<li>实现可迭代接口</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> set = <span class=\"keyword\">new</span> <span class=\"built_in\">Set</span>([<span class=\"string\">&#x27;foo&#x27;</span>, <span class=\"string\">&#x27;bar&#x27;</span>, <span class=\"string\">&#x27;abc&#x27;</span>])</span><br><span class=\"line\"><span class=\"keyword\">const</span> iterator = set[<span class=\"built_in\">Symbol</span>.iterator]()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(iterator.next()) <span class=\"comment\">// &#123; value: &#x27;foo&#x27;, done: false &#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(iterator.next()) <span class=\"comment\">// &#123; value: &#x27;bar&#x27;, done: false &#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(iterator.next()) <span class=\"comment\">// &#123; value: &#x27;abc&#x27;, done: false &#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(iterator.next()) <span class=\"comment\">// &#123; value: undefined, done: true &#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(iterator.next()) <span class=\"comment\">// &#123; value: undefined, done: true &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> obj = &#123;</span><br><span class=\"line\">    store: [<span class=\"string\">&#x27;foo&#x27;</span>, <span class=\"string\">&#x27;bar&#x27;</span>, <span class=\"string\">&#x27;abc&#x27;</span>],</span><br><span class=\"line\">    [<span class=\"built_in\">Symbol</span>.iterator]: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> index = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> self = <span class=\"built_in\">this</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            next: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">const</span> result = &#123;</span><br><span class=\"line\">                    value: self.store[index],</span><br><span class=\"line\">                    done: index &gt;= self.store.length</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                index++</span><br><span class=\"line\">                <span class=\"keyword\">return</span> result</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> item <span class=\"keyword\">of</span> obj) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(item)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// foo</span></span><br><span class=\"line\"><span class=\"comment\">// bar</span></span><br><span class=\"line\"><span class=\"comment\">// abc</span></span><br></pre></td></tr></table></figure>\n<ol start=\"27\">\n<li>迭代器模式</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> todos = &#123;</span><br><span class=\"line\">    life: [<span class=\"string\">&#x27;吃饭&#x27;</span>, <span class=\"string\">&#x27;睡觉&#x27;</span>, <span class=\"string\">&#x27;打豆豆&#x27;</span>],</span><br><span class=\"line\">    learn: [<span class=\"string\">&#x27;js&#x27;</span>, <span class=\"string\">&#x27;node&#x27;</span>, <span class=\"string\">&#x27;html&#x27;</span>, <span class=\"string\">&#x27;css&#x27;</span>],</span><br><span class=\"line\">    work: [<span class=\"string\">&#x27;跳舞&#x27;</span>, <span class=\"string\">&#x27;唱歌&#x27;</span>],</span><br><span class=\"line\">    each: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">callback</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> all = [].concat(<span class=\"built_in\">this</span>.life, <span class=\"built_in\">this</span>.learn, <span class=\"built_in\">this</span>.work)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> item <span class=\"keyword\">of</span> all) &#123;</span><br><span class=\"line\">            callback(item)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    [<span class=\"built_in\">Symbol</span>.iterator]: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> all = [...this.life, ...this.learn, ...this.work]</span><br><span class=\"line\">        <span class=\"keyword\">let</span> index = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">            next: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">                    value: all[index],</span><br><span class=\"line\">                    done: index ++ &gt;= all.length</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// for (const item of todos.life) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     console.log(item)</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br><span class=\"line\"><span class=\"comment\">// for (const item of todos.learn) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     console.log(item)</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br><span class=\"line\"><span class=\"comment\">// for (const item of todos.work) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     console.log(item)</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;</span></span><br><span class=\"line\"><span class=\"comment\">// todos.each(function (item) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//     console.log(item)</span></span><br><span class=\"line\"><span class=\"comment\">// &#125;)</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> item <span class=\"keyword\">of</span> todos) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(item)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"28\">\n<li>生成器函数 Generator</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> * <span class=\"title\">foo</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"number\">100</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">2</span>)</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"number\">200</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"number\">3</span>)</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"number\">300</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> generator = foo()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(generator.next()) <span class=\"comment\">// 1  &#123; value: 100, done: false &#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(generator.next()) <span class=\"comment\">// 2  &#123; value: 200, done: false &#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(generator.next()) <span class=\"comment\">// 3  &#123; value: 300, done: false &#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(generator.next()) <span class=\"comment\">// &#123; value: undefined, done: true &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 模拟场景</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> * <span class=\"title\">createIdMaker</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> id = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">whild</span>(<span class=\"params\"><span class=\"literal\">true</span></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">yield</span> id ++</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> idMaker = createIdMaker()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(idMaker.next().value) <span class=\"comment\">// 1</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(idMaker.next().value) <span class=\"comment\">// 2</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(idMaker.next().value) <span class=\"comment\">// 3</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(idMaker.next().value) <span class=\"comment\">// 4</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用 Generator 函数实现 iterator 方法</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> todos = &#123;</span><br><span class=\"line\">    life: [<span class=\"string\">&#x27;吃饭&#x27;</span>, <span class=\"string\">&#x27;睡觉&#x27;</span>, <span class=\"string\">&#x27;打豆豆&#x27;</span>],</span><br><span class=\"line\">    learn: [<span class=\"string\">&#x27;js&#x27;</span>, <span class=\"string\">&#x27;node&#x27;</span>, <span class=\"string\">&#x27;html&#x27;</span>, <span class=\"string\">&#x27;css&#x27;</span>],</span><br><span class=\"line\">    work: [<span class=\"string\">&#x27;跳舞&#x27;</span>, <span class=\"string\">&#x27;唱歌&#x27;</span>],</span><br><span class=\"line\">    [<span class=\"built_in\">Symbol</span>.iterator]: <span class=\"function\"><span class=\"keyword\">function</span> * (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> all = [...this.life, ...this.learn, ...this.work]</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> item <span class=\"keyword\">of</span> all) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">yield</span> item</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> item <span class=\"keyword\">of</span> todos) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(item)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"29\">\n<li>\n<p>ES Modules</p>\n</li>\n<li>\n<p>ECMAScript2016</p>\n</li>\n</ol>\n<ul>\n<li>includes方法</li>\n<li>指数运算符  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Math</span>.pow(<span class=\"number\">2</span>, <span class=\"number\">10</span>) <span class=\"comment\">// 1024</span></span><br><span class=\"line\"><span class=\"number\">2</span> ** <span class=\"number\">10</span> <span class=\"comment\">// 1024</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ol start=\"31\">\n<li>ES2017</li>\n</ol>\n<ul>\n<li>Object.values  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj = &#123;</span><br><span class=\"line\">    name: <span class=\"string\">&#x27;zs&#x27;</span>,</span><br><span class=\"line\">    age: <span class=\"number\">13</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.values(obj)) <span class=\"comment\">// [&#x27;zs&#x27;, 13]</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>Object.entries  <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> obj = &#123;</span><br><span class=\"line\">    name: <span class=\"string\">&#x27;zs&#x27;</span>,</span><br><span class=\"line\">    age: <span class=\"number\">13</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.entries(obj)) <span class=\"comment\">// [ [ name, &#x27;zs&#x27; ], [ age, 13 ] ]</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">const</span> [key, value] <span class=\"keyword\">of</span> <span class=\"built_in\">Object</span>.entries(obj)) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(key, value)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// name zs</span></span><br><span class=\"line\"><span class=\"comment\">// age 13</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"keyword\">new</span> <span class=\"built_in\">Map</span>(<span class=\"built_in\">Object</span>.entries(obj))) <span class=\"comment\">// Map &#123; &#x27;name&#x27; =&gt; &#x27;zs&#x27;, &#x27;age&#x27; =&gt; 13 &#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>Object.getOwnPropertyDescriptors</li>\n<li>String.protptype.padStart / String.protptype.padEnd</li>\n<li>在函数参数中添加尾逗号</li>\n</ul>\n","prev":{"title":"TypeScript","link":"2021/12/29/TypeScript"},"next":{"title":"JS基础夯实","link":"2021/12/22/JS基础夯实"},"plink":"https://rdhuang.gitee.io/2021/12/27/ECMAScript/","copyright":{"author":"Humphrey","link":"<a href=\"https://rdhuang.gitee.io/2021/12/27/ECMAScript/\" title=\"ECMAScript\">https://rdhuang.gitee.io/2021/12/27/ECMAScript/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}